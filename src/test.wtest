import profesionales.*
import universidades.*
import empresas.*
describe "group of tests" {
	const univSanMartin = new Universidad(provincia="Buenos Aires", honorariosRecomendados=3500)
	const univRosario = new Universidad(provincia="Santa Fe", honorariosRecomendados=2800)
	const univCorrientes = new Universidad(provincia="Corrientes", honorariosRecomendados=4200)
	const univHurlingham = new Universidad(provincia="Buenos Aires", honorariosRecomendados=8800)
	
	const juana = new ProfesionalVinculado(universidad=univRosario)
	const melina = new ProfesionalAsociado(universidad=univCorrientes)
	const rocio = new ProfesionalLibre(universidad=univHurlingham, honorariosPorHora=5000, provinciasDondePuedeTrabajar=#{"Santa Fe", "Buenos Aires", "Cordoba"})
	const luciana = new ProfesionalLibre(universidad=univRosario, honorariosPorHora=3200, provinciasDondePuedeTrabajar=#{"Santa Fe", "Entre Rios"})
	
	var rmt = new Empresa(honorarioDeReferencia=3500)
	
	fixture{
		rmt.agregarProfesional(juana)
		rmt.agregarProfesional(melina)
		rmt.agregarProfesional(rocio)
		rmt.agregarProfesional(luciana)
	}
	test "profesionales caros solo rocio" {
		assert.equals([rocio], rmt.profesionalesCaros())
	}
	test "universidades formadoras solo rosario, corrientes y hurlingham"{
		assert.equals([univRosario, univCorrientes, univHurlingham], rmt.universidadesFormadoras())
	}
	test "profesional mas barato juana"{
		assert.equals(juana, rmt.profesionalMasBarato())
	}
	test "provincias de sante fe y cordoba cubiertas,misiones no"{
		assert.that(rmt.estaCubiertaProvincia("Santa Fe"))
	}
	test "a"{
		assert.equals(2, rmt.nroDeProfesionalesFormadosEn(univRosario))
	}
}